(deftheme synthwave-light
  "Created 2017-03-06.")

(custom-theme-set-variables
 'synthwave-light
 '(custom-safe-themes (quote ("54d8e33a1745eba6a6e4b9a71190873d643d6576c3d83a80a873593288aec838" "fc7a9eee0ea854b5abbbbe51704d8cfd3d2da7fa921fa1a9edcb43834a88a1ab" default))))

(custom-theme-set-faces
 'synthwave-light
 '(button ((t (:foreground "brightgreen" :inherit (link)))))
 '(custom-comment-tag ((t (:foreground "blue"))))
 '(custom-face-tag ((t (:inherit custom-variable-tag))))
 '(custom-group-tag ((t (:inherit variable-pitch :foreground "brightwhite" :weight bold :height 1.2))))
 '(custom-state ((t (:foreground "yellow"))))
 '(custom-variable-tag ((t (:foreground "cyan" :weight bold))))
 '(font-lock-constant-face ((t (:foreground "brightblue"))))
 '(fringe ((t (:background "brightgreen"))))
 '(header-line ((t (:underline (:color foreground-color :style line) :inverse-video nil :foreground "blue" :background "black" :inherit (mode-line)))))
 '(highlight ((t (:background "white"))))
 '(isearch ((t (:background "brightblack" :foreground "black"))))
 '(lazy-highlight ((t (:background "brightblack"))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "brightmagenta"))))
 '(match ((t (:background "brightblack"))))
 '(menu ((t (:background "brightmagenta" :foreground "black" :inverse-video t))))
 '(mode-line ((t (:box (:line-width -1 :style released-button) :foreground "black" :background "brightblue"))))
 '(success ((t (:foreground "white" :weight bold))))
 '(cursor ((((background light)) (:background "black")) (((background dark)) (:background "white"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:font "-outline-Arial-normal-normal-normal-sans-*-*-*-*-p-*-iso8859-1")) (t (:family "Sans Serif"))))
 '(escape-glyph ((t (:foreground "white"))))
 '(minibuffer-prompt ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "medium blue"))))
 '(region ((t (:background "brightblack"))))
 '(shadow ((t (:foreground "magenta"))))
 '(secondary-selection ((t (:background "brightwhite" :foreground "black"))))
 '(trailing-whitespace ((t (:background "brightgreen"))))
 '(font-lock-builtin-face ((t (:foreground "white"))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "brightblack"))))
 '(font-lock-doc-face ((t (:foreground "brightred"))))
 '(font-lock-function-name-face ((t (:foreground "brightblue"))))
 '(font-lock-keyword-face ((t (:foreground "blue"))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "brightyellow"))))
 '(font-lock-type-face ((t (:foreground "brightwhite"))))
 '(font-lock-variable-name-face ((t (:foreground "brightblue"))))
 '(font-lock-warning-face ((t (:inherit (error)))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(tooltip ((t (:inherit variable-pitch :background "brightblack" :foreground "black"))))
 '(mode-line-buffer-id ((t (:weight bold))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:inherit mode-line :background "black" :foreground "cyan" :box (:line-width -1 :color "grey75") :weight light))))
 '(isearch-fail ((t (:background "green"))))
 '(next-error ((t (:inherit region :foreground "black"))))
 '(query-replace ((t (:inherit (isearch)))))
 '(default ((t (:family "default" :foundry "default" :width normal :height 1 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "unspecified-fg" :background "unspecified-bg" :stipple nil :inherit nil))))
 '(compilation-info ((t (:inherit (success)))))
 '(compilation-mode-line-exit ((t (:inherit compilation-info :foreground "cyan" :weight bold))))
 '(compilation-mode-line-run ((t (:inherit (compilation-warning)))))
 '(compilation-mode-line-fail ((t (:inherit compilation-error :foreground "brightyellow" :weight bold))))
 '(compilation-warning ((t (:inherit (warning)))))
 '(warning ((t (:foreground "brightwhite" :weight bold)))))

(provide-theme 'synthwave-light)
